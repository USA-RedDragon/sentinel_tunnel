name: Release

on: push

jobs:
  release:
    name: Release
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: amd64,arm64,arm

      - run: go generate ./...

      - name: Set build variables
        id: vars
        run: |
          args='release --clean'
          if [[ "$GITHUB_REF" != refs/tags/* ]]; then
            args+=' --snapshot'
          fi
          echo "args=$args" >> $GITHUB_OUTPUT

      - name: Release
        uses: goreleaser/goreleaser-action@v5
        with:
          version: latest
          args: ${{ steps.vars.outputs.args }}
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Push beta image
        if: github.ref_name == 'main'
        run: |
          export REPO="$(tr '[[:upper:]]' '[[:lower:]]' <<< "ghcr.io/$GITHUB_REPOSITORY")"
          IMAGES=()
          while read -r SOURCE DEST; do
            docker tag "$SOURCE" "$DEST"
            docker push "$DEST"
            IMAGES+=("$DEST")
          done \
            < <(docker image ls --format=json | \
              yq --input-format=json --output-format=tsv '
                select(.Repository == strenv(REPO)) |
                [
                  .Repository + ":" + .Tag,
                  .Repository + ":beta-" + (.Tag | sub(".*-", ""))
                ]
              ')

          docker manifest create "$REPO:beta" "${IMAGES[@]}"
          docker manifest push "$REPO:beta"

      - uses: creekorful/goreportcard-action@v1.0
